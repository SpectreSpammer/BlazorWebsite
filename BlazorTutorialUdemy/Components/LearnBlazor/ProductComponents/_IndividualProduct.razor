<div class="bg-light border m-1" @onclick="(args)=>LastSelectedProduct(args,Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>

    <input type="checkbox" @onchange="FavoriteUpdated"/> Add to Favorite <br />
   
    Name - @Product.Name<br />
    Show Properties :
    <input type="checkbox" @bind="Product.isActive" /><br />

    @if (Product.isActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeleteButton isActive="@Product.isActive"></_EditDeleteButton>


</div>

@code {
    [Parameter]
    public Demo_Products Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }

    

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }


    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }

}
