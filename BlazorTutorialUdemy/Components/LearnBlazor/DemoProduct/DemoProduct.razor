@page "/demoProduct"
@rendermode InteractiveServer

<h3>DemoProduct</h3>
<p>Favorites Total: @selectedFavoriteCount</p>
<p>last Selected Product: @LastSelectedProductName </p>

<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach(var prod in Products)
        {
            <_IndividualProduct
                Product="prod" 
                OnFavoriteUpdated="FavoriteCountUpdate"
                OnLastSelectedProductChange="SelectedProductUpdate"
            
            >
               </_IndividualProduct>
        }
    </div>
</div>


@code {
    List<Demo_Products> Products = new();

    private int selectedFavoriteCount { get; set; } = 0;

    private string LastSelectedProductName { get; set; }

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "4090 TI",
                isActive = false,
                Price = 69,
                ProductProperties = new()
                {
                    new Demo_ProductProp    {   Id = 1, Key = "Nvidia", Value = "RTX"   },

                    new Demo_ProductProp    {   Id = 2, Key = "vram", Value = "32gb"    },

                    new Demo_ProductProp    {   Id = 3, Key = "display", Value = "4k"   }
                }
            });


        Products.Add(new()
            {
                Id = 2,
                Name = "6900XT",
                isActive = false,
                Price = 96,
                ProductProperties = new()
                {
                   new Demo_ProductProp    {   Id = 1, Key = "AMD", Value = "Radeon"   },

                    new Demo_ProductProp    {   Id = 2, Key = "vram", Value = "32gb"    },

                    new Demo_ProductProp    {   Id = 3, Key = "display", Value = "4k"   }
                }
            });





    }


    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            selectedFavoriteCount++;
        }
        else
        {
            selectedFavoriteCount--;
        }
    }


    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }




}
