@page "/parentComponent"
@rendermode InteractiveServer

<h3>Parent Child Relation</h3>

<CascadingValue Value="@MessageForGrandChild" Name="message">
    <CascadingValue Value="@LuckyNumber" Name="luckyNumber">
<_ChildComponent @ref="childComp" OnButtonClick="ShowMessage" Title="This title is passed as parameter from Parent Component"
                >
   
<ChildContent>Render Fragment From Parent</ChildContent>
    <DangerChildContent>Danger Content from Render Fragment</DangerChildContent>
</_ChildComponent>
</CascadingValue>
</CascadingValue>
<p>@messageText</p>

@* <_AnotherChildComponent InputAttributes="InputAttributesFromParent"></_AnotherChildComponent> *@
<_AnotherChildComponent placeholder="Placeholder From Parent"></_AnotherChildComponent>

<div class="row">
    <button class="btn btn-success" @onclick="@(() => childComp.ToastrSuccess())">Show SweetAlert</button>
    <button class="btn btn-danger" @onclick="@(() => childComp.ToastrFailed())">Show SweetAlert</button>
</div>

@*<_ChildComponent Title="This is second child component"> </_ChildComponent> *@



@code {
    // public Dictionary<string, object> InputAttributesFromParent { get; set; } = new Dictionary<string, object>()
    // {
    //     {   "required", "required"  },
    //     {   "placeholder", "Enter Name from Parent"  },
    //     {   "maxlength", 5  }
    // };


    private _ChildComponent childComp;
    public string MessageForGrandChild = "This message is from your grand parent (ParentComponent)";
    public string LuckyNumber = "7";
    public string messageText = "";

    private void ShowMessage()
    {
        messageText = "Button clicked from Child Component";
    }
}
