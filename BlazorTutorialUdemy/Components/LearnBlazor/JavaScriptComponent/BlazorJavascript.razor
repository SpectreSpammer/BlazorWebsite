@page "/blazorjavascript"
@rendermode InteractiveServer
@inject IJSRuntime _JsRuntime


<h3>BlazorJavascript</h3>

<div class="row">
    <button class="btn btn-secondary" style="width:100px" @onclick="TestConfirmBox">Test Confirm Box </button>
</div>
<br />
<div class="row">
    <button class="btn btn-success" style="width:100px" @onclick="ToastrSuccess">Toastr Success Box </button>
    <button class="btn btn-danger" style="width:100px" @onclick="ToastrFailed">Toastr Failed Box </button>
</div>
<br />
<div class="row">
    <button class="btn btn-success" style="width:100px" @onclick="SweetAlertSuccess">Sweetalert Success Box </button>
    <button class="btn btn-danger" style="width:100px" @onclick="SweetAlertFailed">Sweetalert Failed Box </button>
</div>

<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation Pending</p>
    }

</div>

@code {
    private string ConfirmMessage = "Are you sure want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }

    private async Task ToastrFailed()
    {
        await _JsRuntime.ToastrError("Operation Failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert","success", "Task Completed Successfully");
    }

    private async Task SweetAlertFailed()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "error", "Task Failed");
    }
}
